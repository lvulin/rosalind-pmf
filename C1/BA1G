def HammingDistance(p, q):
    """Computes the hamming distance between strings p and q"""
    if len(p) != len(q):
        return -1
    
    dist = 0
    """ zip(AB,CD) returns (('A','C'),('B','D')) """
    for first, second in zip(p, q):   #zip uzme 2 liste i napravi uredene parove
        if first != second:
            dist = dist + 1

    return dist
    
    
x="""CGGTCTCACAGCGACGGGTAATCGATCCGCCCGTGTTTGGAGAGCACCGGCTCCTATAATCTCGTGAATCCATTGTCACCACTACTAGAGCTCCCGGCAACGCGATACGCTTTTCTACCTTGGTGCGAGTTGCAGGACGACCAATGGTGACGATCACCGACTTGATAATTGGATTAAGAAAACGACCAACAGTGAAGGGTATTCTCGCAACACGAAGATTGACATTGTGTGGAAATAGAACCGGTTATGCTGGGAATACTTTGCCCCTAACAGGGTCTAGGCATACGATATCCAGGATCCTAGGAAGTACATATGAAGCTCCTGCTATACCTATTGCGGCGTTTCGCGGCCCCGAATTAATTTCAATTTCTCCATCGCATGTTGTTGTCCTAAATCGCATGTTCTGTATAAGAATTTCAGATTCCAGTATCGTGCATAAAAAACACAGGTGCGCGCTGCCCCTGGGTCCTGTGCAGATCCCTAATTCGGTGCAGTCACGAGACTCGCGTCAAACCTGAGAATGCGTCTTGGACGCCCTGTGACGTGACCTGAAGTGAGATGACCCGCATGACCGATTTCAGCAGACGGCCGCGGTATGCGCCAAGGGAATCCCTAATTACACCTTCATTCTTAAAAGTACCAGGGCCACTCGCGGCAAGCCTATCTTAATTCCAGACCGCAGAATTTGCGAGATCTACAGTTTTGTACTTCGCCGGCCCCACATATGACTGTACCTCCCACATCATCTTAGGATTCCAATCCAGGAGATCGAGCCGTCAATATCGTCTACTACGTCATAGATATAGCCTTAAATAAAAGCTTTTGTAAGGCCTGACTTCATCTTTCGTGGATTGTCCCCTAGTCACGCTAGAATGTGGGCCCGGAAGTTCGGCGCCTTCCTATATTAACAAGACGTTCAATGCACACGAGACGGCTGATATATTTTGCCTTACGCCGTAATGTCATCCTAAAGTAAAGAACAGCATGCATTTTATCAATCTCCCGGGCTTGGATTACAGACTGGGTTGAGAGTGGTGGTAACGGGCCCTGCGCAGCCTCTTCTTGGAGCGGTACAC
GGCCACCTATCCACTGGTTCGCTAAACGGCGTATCCTCGAGGCTTGCCACAATGAGAGAAGAAGTCATACCGTCGGGCTTAGTTTGATCTTCTCGGAACGTGGGCAATTTCAGTAAATGAAGTGTGAGATCATGGACGTGTAGACATCGAGAGCGACGCTTTTTCGAGTTGCAGAAGACTAGCTCGACGCTCTGAAACATACTACAATCTCCTAGTCGTCCTCGTGGCGCAAACGAGCTCCTTATCACATGCATAATCCGCTTGTCCAACGTGTCGGGTCCGAGGTGGCACTGGGCCCACTCAGCACATGAACATGTAGGTCTCAGCAATTCGTTGCTAACGAAATGGAACACGTGGAACGAGCACCTGAGAGGAGCGTTATTGGACACAAGAGGTGAGACGGGCTACGGTTTTCACTGCACCTATCACAGCCTTGTGCAGCTTCTCCCGGGCTAATTACGTCTGGATCGCATGTCCATATCATTACGGAAGCCACCAGCTCCATACGGGCAACCCATACAGTAATGACCGTCATTGATCCGCGTGTACGGGAGCACACCGTGGTGGTAGGTCGCCTGCTTAAAATTTAAATGGAAAGAGGTAAGTCGGCTCCGCATCCGCAAAGCCAAAATGACCGGAGCAAGCACAGTATGTAGCATAAGATCTAGGACGGGGCTTGTAATTCCCCCGGTCTGAACAATTGTGAAAACTGCCATGTCCCTAGACCAATGGGATCATCACAATTAGTCTTCAGATTTCTATACGACGTATCGCTTTGATAGCACGCTTCCACGCTGATACTGGCAGCTTGTGACCCTCCCGTCTGAACTAGCTTACCGATTAGCTCGGGAGTTAGTAATACGCAGCTCTCTCCCAGGACGTATGACTGACCTGTAGAACCGAACCCACATTCCTCCGCTTGCGCATCTTCTACCGTAGGGCAAATGGAGGCAACTAGCTGTAAGACGTGTCATTATCCCCGCTCGTCCGATCGTTAAAGTCCTTCAGGGGGCATGAAATCTTGAAATACCGCTTATCGGTAATGGGAAATATACTGCACCATAGTACAGCGCCTT"""
inlines=x.split("\n")
p = inlines[0]
q = inlines[1]
print(HammingDistance(p,q))
